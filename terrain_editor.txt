import pygame
import random

# Initialisation de Pygame
pygame.init()

# Dimensions de la fenêtre
WIDTH, HEIGHT = 800, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Terrain Modifier")

# Couleurs
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GROUND_COLOR = (139, 69, 19)  # Couleur du sol (marron)

# Paramètres du terrain
min_height = 50
max_height = 300
num_craters = 5
previous_num_craters = num_craters  # Pour suivre le nombre de cratères précédent

def generate_terrain(width, height, min_height, max_height):
    terrain = []
    center = width // 2

    for x in range(width):
        distance = abs(x - center)
        base_height = max_height - (max_height - min_height) * (distance / center) ** 2
        terrain.append(int(height - base_height))

    return terrain

def create_random_craters(terrain, num_craters, width):
    for _ in range(num_craters):
        x = random.randint(5, width - 5)
        radius = random.randint(50, 75)
        terrain = create_crater(terrain, x, radius)

    return terrain

def draw_terrain(screen, terrain, height):
    for x in range(len(terrain)):
        pygame.draw.line(screen, GROUND_COLOR, (x, terrain[x]), (x, height))

def create_crater(terrain, x, radius):
    for i in range(max(0, x - radius), min(len(terrain), x + radius)):
        distance = abs(i - x)
        if distance < radius:
            depth = int((radius - distance) ** 0.87)
            terrain[i] = max(terrain[i] + depth, 0)

    return terrain

def draw_slider(screen, x, y, width, value, min_value, max_value):
    pygame.draw.rect(screen, BLACK, (x, y, width, 20))
    pygame.draw.rect(screen, WHITE, (x + value * width / (max_value - min_value), y, 10, 20))

def main():
    global min_height, max_height, num_craters, previous_num_craters
    clock = pygame.time.Clock()
    running = True
    terrain = generate_terrain(WIDTH, HEIGHT, min_height, max_height)

    while running:
        screen.fill(WHITE)

        # Dessiner le terrain
        draw_terrain(screen, terrain, HEIGHT)

        # Dessiner les sliders
        draw_slider(screen, 50, 50, 200, min_height, 0, 500)
        draw_slider(screen, 50, 100, 200, max_height, 0, 500)
        draw_slider(screen, 50, 150, 200, num_craters, 0, 20)

        # Événements
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

            if event.type == pygame.MOUSEBUTTONDOWN:
                if event.button == 1:  # Clic gauche
                    mouse_x, mouse_y = event.pos
                    if 50 <= mouse_x <= 250:
                        if 50 <= mouse_y <= 70:
                            min_height = int((mouse_x - 50) / 200 * 500)
                        elif 100 <= mouse_y <= 120:
                            max_height = int((mouse_x - 50) / 200 * 500)
                        elif 150 <= mouse_y <= 170:
                            new_num_craters = int((mouse_x - 50) / 200 * 20)
                            if new_num_craters != previous_num_craters:  # Vérifier si le nombre de cratères a changé
                                num_craters = new_num_craters
                                terrain = generate_terrain(WIDTH, HEIGHT, min_height, max_height)
                                terrain = create_random_craters(terrain, num_craters, WIDTH)
                                previous_num_craters = num_craters  # Mettre à jour le nombre de cratères précédent

        pygame.display.flip()
        clock.tick(60)

    pygame.quit()

if __name__ == "__main__":
    main()